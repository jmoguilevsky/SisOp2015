#! /bin/bash
SLEEP_TIME=30
CYCLE_COUNT=0
CANT_SEG_UN_ANIO=$(( 1 * 365 * 24 * 3600 ))
ARCH_CENTRALES=$MAEDIR/centrales.mae
function checkfile {

	EMPTY_OK=$(file "$NOVEDIR/$1" | grep -c "empty")
	if (( EMPTY_OK ))
	then
		./GraLog "AFREC" "Archivo $1 rechazado, el archivo está vacío." "WAR"
		return 0
	fi

	TEXT_OK=$(file "$NOVEDIR/$1" | grep -c "text")
	if (( !TEXT_OK ))
	then
		./GraLog "AFREC" "Archivo $1 rechazado, el archivo no es de texto." "WAR"
		return 0
	fi

	FORMAT_OK=$( echo "$1" | grep -c "^[A-Z]\{3\}_[0-9]\{8\}.csv$")
	if (( !FORMAT_OK ))
	then 
		./GraLog AFREC "Archivo $1 rechazado, nombre del archivo inválido." "WAR"
		return 0
	fi

	COD_CENTRAL_OK=$( grep -c "$( echo "$1" | cut -d_ -f1 )" $ARCH_CENTRALES)
	if (( !COD_CENTRAL_OK ))
	then 
		./GraLog "AFREC" "Archivo $1 rechazado, código de central inexistente." "WAR"
		return 0
	fi

	FECHA=$( echo "$1" | cut -d_ -f2 | cut -d. -f1)
	date -d "$FECHA" &> /dev/null
	FECHA_VALIDA=!$?
	if (( !FECHA_VALIDA ))
	then
		./GraLog "AFREC" "Archivo $1 rechazado, fecha inválida." "WAR"
		return 0
	fi	

	DIFF_SEGUNDOS=$(( $(date +"%s")-$(date -d "$FECHA" +"%s") ))

	FECHA_RANGO_OK=$(( DIFF_SEGUNDOS >= 0 && DIFF_SEGUNDOS <= CANT_SEG_UN_ANIO))

	if (( !FECHA_RANGO_OK ))
	then
		./GraLog "AFREC" "Archivo $1 rechazado, fecha fuera de rango." "WAR"
		return 0
	fi
	return 1

}

function moverArchivos {

	for FILE in ${ACEPTADOS[*]}
	do
		./MoverA "$NOVEDIR/$FILE" "$ACEPDIR"
		./GraLog "AFREC" "Archivo $FILE aceptado, movido a $ACEPDIR/$FILE." "INFO" 
	done
	for FILE in ${RECHAZADOS[*]}
	do
		./MoverA "$NOVEDIR/$FILE" "$RECHDIR"
	done

}

function checkFiles {
	ACEPTADOS=()
	RECHAZADOS=()
	for FILE in ${FILE_LIST[*]}
	do
		checkfile "$FILE"
		FILE_OK=$?
		if (( FILE_OK ))
		then
			ACEPTADOS+=($FILE)
		else
			RECHAZADOS+=($FILE)
		fi
	done
	
}

function main {

	CYCLE_COUNT=$(( CYCLE_COUNT + 1 ))

	./GraLog "AFREC" "AFREC ciclo nro. $CYCLE_COUNT" "INFO"

	FILE_LIST=( $(ls -A $NOVEDIR) )

	checkFiles

	moverArchivos

	PENDIENTES=( $(ls -A $ACEPDIR) )
	if (( ${#PENDIENTES[@]} ))
	then
		ID=$(pidof -x "AFUMB")
		if [ -z "$ID" ];
		then
			#Si no está corriendo AFUMB
			./Arrancar "AFUMB"
			ID=$(pidof -x "AFUMB")
			./GraLog "AFREC" "AFUMB corriendo bajo el no.: $ID." "INFO"
		else
			#Si AFUMB ya está corriendo
			./GraLog "AFREC" "Invocación de AFUMB pospuesta para el siguiente ciclo." "INFO"

		fi
	fi

}

while true
do
	main
	sleep $SLEEP_TIME
done

